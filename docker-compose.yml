version: '3.8'

services:
  auth-service:
    build: ./auth-service
    ports:
      - "3001:3001"
    volumes:
      - ./auth-service/src:/usr/src/app/src  
      - /usr/src/app/node_modules
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
      - redis

  pay-service:
    build: ./pay-service
    ports:
      - "3002:3002"
    volumes:
      - ./pay-service/src:/usr/src/app/src  
      - /usr/src/app/node_modules
    environment:
      - DATABASE_URL=${PAYMENTS_DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}  
    depends_on:
      - db
      - redis

  resource-service:
    build: ./resource-service
    ports:
      - "3003:3003"
    volumes:
      - ./resource-service/src:/usr/src/app/src  
      - /usr/src/app/node_modules
    environment:
      - DATABASE_URL=${RESOURCE_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
      - redis

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - auth-service
      - pay-service
      - resource-service
      - redis


  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d

  redis:
    image: redis:7
    restart: always

volumes:
  postgres_data:
